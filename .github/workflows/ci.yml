name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags -Xms6G -Xmx6G
  SBT_OPTS: -XX:+PrintCommandLineFlags -Xms6G -Xmx6G

on:
  pull_request:
    branches-ignore: ["gh-pages"]
  push:
    branches: ["master"]
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - run: sbt check

  publishLocal:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - run: sbt +publishLocal
      - run: sbt docs/clean; sbt docs/buildWebsite

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        java: ["11", "17", "21"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - run: sbt +test

  update-readme:
    name: Update README
    runs-on: ubuntu-latest
    continue-on-error: false
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - run: sbt docs/generateReadme
      - run: |
          git config --local user.email "zio-assistant[bot]@users.noreply.github.com"
          git config --local user.name "ZIO Assistant"
          git add README.md
          git commit -m "Update README.md" || echo "No changes to commit"
      - id: generate-token
        uses: zio/generate-github-app-token@v1.0.0
        with:
          app_id: ${{ secrets.APP_ID }}
          app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          body: |-
            Autogenerated changes after running the `sbt docs/generateReadme` command of the [zio-sbt-website](https://zio.dev/zio-sbt) plugin.

            I will automatically update the README.md file whenever there is new change for README.md, e.g.
              - After each release, I will update the version in the installation section.
              - After any changes to the "docs/index.md" file, I will update the README.md file accordingly.
          branch: zio-sbt-website/update-readme
          commit-message: Update README.md
          token: ${{ steps.generate-token.outputs.token }}
          delete-branch: true
          title: Update README.md
      - name: Approve PR
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: gh pr review "$PR_URL" --approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
      - name: Enable Auto-Merge
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: gh pr merge --auto --squash "$PR_URL" || gh pr merge --squash "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}

  ci:
    if: always()
    runs-on: ubuntu-latest
    needs: [lint, publishLocal, test]
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [ci]
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  release-docs:
    name: Release Docs
    runs-on: ubuntu-latest
    continue-on-error: false
    needs:
      - release
    if: ${{ ((github.event_name == 'release') && (github.event.action == 'published')) || (github.event_name == 'workflow_dispatch') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          check-latest: true
      - uses: sbt/setup-sbt@v1
      - uses: coursier/cache-action@v6
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org
      - name: Publish Docs to NPM Registry
        run: sbt docs/publishToNpm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify-docs-release:
    name: Notify Docs Release
    runs-on: ubuntu-latest
    continue-on-error: false
    needs:
      - release-docs
    if: ${{ (github.event_name == 'release') && (github.event.action == 'published') }}
    steps:
      - uses: actions/checkout@v4
      - name: notify the main repo about the new release of docs package
        run: |
          PACKAGE_NAME=$(cat docs/package.json | grep '"name"' | awk -F'"' '{print $4}')
          PACKAGE_VERSION=$(npm view $PACKAGE_NAME version)
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}"\
              https://api.github.com/repos/zio/zio/dispatches \
              -d '{
                    "event_type":"update-docs",
                    "client_payload":{
                      "package_name":"'"${PACKAGE_NAME}"'",
                      "package_version": "'"${PACKAGE_VERSION}"'"
                    }
                  }'
